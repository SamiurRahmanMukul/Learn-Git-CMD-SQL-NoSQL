											[<>] MySQL Database Command [<>]
				            		  With: Samiur Rahman Mukul
					      				Email: sr.mukul9090@gmail.com
											--------------------------------

1. Show Database: 			  			$ show databases;
2. Create a New Database: 	  	$ create database <database_name>;
3. Delete Database: 			  		$ drop database <database_name>;
4. Use and Control a Database: 	$ use <database_name>;
5. Check Current Database:     	$ select database();

6. Create a New Table: 					$ create table <table_name>
																	(
																		<column_name> data_type,
																		<column_name> data_type
																	);

7. Example, Create a Table: 		$ CREATE TABLE Persons_info
																	(
																		PersonId int NOT NULL AUTO_INCREMENT,
																		FullName varchar(255) NOT NULL DEFAULT 'unnamed',
																		Age int NOT NULL,
																		PRIMARY KEY (PersonId)
																	);

8. Show all table in Database:     	$ show tables;
9. Show details Table in Database: 	$ DESC <table_name>;
10. Show Columns in a Table:   	  	$ SHOW COLUMNS FROM <table_name>;]
11. Delete a Table: 				  			$ DROP TABLE <table_name>;
12. Rename a Table: 				  			$ RENAME TABLE <old_table_name> TO <new_table_name>;

13. Insert Data In Table: 	  			$ INSERT INTO <table_name> (id, name, class)
							 	  										values(101, 'Samiur Rahman', 12);

14. Show All Data In Table: 	  		$ SELECT * FROM <table_name>;

15. Show Warnings In Database: 			$ SHOW WARNINGS;
16. Show Errors In Database:   			$ SHOW ERRORS;

17. Create Column In Table: 	  		$ ALTER TABLE <table_name> ADD <column_name> <data_type>;
					      						 				$ Example - ALTER TABLE student_info ADD school_name VARCHAR(250);

18. Drop a Columns In Table:   			$ ALTER TABLE <table_name> student_info DROP COLUMN <column_name>;

19. Search/Query Specific Record In Table Using Where Clause:
					$ SELECT * FROM <table_name> WHERE <column_name> >/</= <define_value>;
					$ Example - SELECT * FROM student_info WHERE age > 25;
					$ Example - SELECT * FROM student_info WHERE age < 25;
					$ Example - SELECT * FROM student_info WHERE age = 25;

20. Update a Record With In Table:
					$ UPDATE <table_name> SET <record_change_column_name> = <define_value> WHERE <unique_column_name> = <record_name>;
					$ Example - UPDATE student_info SET age = 35 WHERE id=2;

21. Delete a Record With In Table:
					$ DELETE FROM <table_name> WHERE <unique_column_name> = <record_name>;
					$ Example - DELETE FROM student_info WHERE id=5;

22. Common Records Query In Table: 
					$ SELECT DISTINCT <column_name> FROM <table_name>;
					$ Example - SELECT DISTINCT full_name FROM student_info;
					$ Example - SELECT DISTINCT full_name, age FROM student_info; ## Multiple Item Query.

23. Sorted Records Query In Table:
					$ SELECT <column_name> FROM <table_name> ORDER BY <column_name>;
					$ Example - SELECT age FROM student_info ORDER BY age; ## Ascending Order.
					$ Example - SELECT DISTINCT age FROM student_info ORDER BY age; ## Descending Order.

24. Limited Records Query In Table:
					$ SELECT <column_name> FROM <table_name> ORDER BY <column_name> LIMIT 3;
					$ Example - SELECT age FROM student_info ORDER BY age LIMIT 3;

25. Like Operator Using Query In Table:
					$ SELECT <column_name> FROM <table_name> WHERE <column_name> LIKE '%<query_name>%';
					$ Example - SELECT full_name from std_info WHERE full_name LIKE '%abdur%';
					$ Example - SELECT full_name from std_info WHERE full_name LIKE 'A%';

26. Find Total Records Specific Column In Table:
					$ SELECT count(<column_name>) FORM <table_name>;
					$ Example - SELECT count(id) FROM std_info;

27. Query Maximum Records Specific Column In Table:
					$ SELECT max(<column_name>) FORM <table_name>;
					$ Example - SELECT max(age) FROM std_info;

28. Query Minimum Records Specific Column In Table: 
					$ SELECT min(<column_name>) FORM <table_name>;
					$ Example - SELECT min(age) FROM std_info;

29. Addition Total Records Specific Column In Table: 
					$ SELECT sum(<column_name>) FORM <table_name>;
					$ Example - SELECT sum(age) FROM std_info;

30. Average Total Records Specific Column In Table: 
					$ SELECT avg(<column_name>) FORM <table_name>;
					$ Example - SELECT avg(age) FROM std_info;

31. MySQL Logical Operator Command: 
					$ SELECT * FROM <table_name> WHERE <column_name> <logical_operator_sing> <assign_a_value>;
					$ Example - SELECT * FROM std_info WHERE age = 25;
					$ Example - SELECT * FROM std_info WHERE age != 25;
					$ Example - SELECT * FROM std_info WHERE age > 25;
					$ Example - SELECT * FROM std_info WHERE age >= 25;
					$ Example - SELECT * FROM std_info WHERE age < 25;
					$ Example - SELECT * FROM std_info WHERE age <= 25;
					$ Example - SELECT * FROM std_info WHERE age <= 65 || age >= 68;
					$ Example - SELECT * FROM std_info WHERE age <= 65 && age >= 68;
					$ Example - SELECT * FROM std_info WHERE age  BETWEEN 60 and 65;
					$ Example - SELECT * FROM std_info WHERE age  NOT BETWEEN 60 and 65;
					$ Example - SELECT * FROM std_info WHERE full_name = "Abdur Karim" || first_name = "Abc Khan";
					$ Example - SELECT * FROM std_info WHERE full_name IN ("Abdur Karim", "Abc Khan");

32. MySQL String Function Command: 
					$ Example - SELECT CONCAT("Samiur", " ", "Rahman", " ", "Mukul") AS "Full_Name";
					$ Example - SELECT CONCAT(full_name, " ", age) FROM std_info;
					$ Example - SELECT REVERSE("samiur") AS Reverse;
					$ Example - SELECT CONCAT("samiur", REVERSE("samiur")) AS Palindrome;
					$ Example - SELECT CHAR_LENGTH("samiur") AS String_Length;
					$ Example - SELECT LCASE("SAMIUR RAHMAN") AS String_LowerCase;
					$ Example - SELECT UCASE("samiur rahman") AS String_UpperCase;

33. MySQL Date Time Data Insert Command: 
					1. Create Table:
													$ CREATE TABLE date_info
														(name VARCHAR(100),
														birth_of_date date,
														birth_of_time time,
														date_and_time datetime);

					2. Table Data Insert: 
													$ INSERT INTO date_info (name, birth_of_date, birth_of_time, date_and_time)
    												values("Samiur Rahman", "1998-09-05", "12-45-30", "1998-09-05 12-45-30");

    			3. Table Current Time Data Insert: 
													$-INSERT INTO date_info (name, birth_of_date, birth_of_time, date_and_time);
    												values("Salman Khan", curdate(), curtime(), now());

34. MySQL FOREIGN KEY Constraint: 
					1. Create Table: 
													$ CREATE TABLE Persons
    												(PersonId int NOT NULL AUTO_INCREMENT,
    												PersonName VARCHAR(250),
    												PersonEmail VARCHAR(200),
    												PRIMARY KEY (cid));

    			2. FOREIGN KEY Table Create: 
													$ CREATE TABLE Orders (
    												OrderID int NOT NULL,
    												OrderNumber int NOT NULL,
    												OrderDate datetime,
    												PersonID int,
    												PRIMARY KEY (OrderID),
    												FOREIGN KEY (PersonID) REFERENCES Persons(PersonID));

35. MySQL Inner SQL Join: 
		# Here are the different types of the JOINs in SQL:
		1. (INNER) JOIN: Returns records that have matching values in both tables.
		2. LEFT (OUTER) JOIN: Returns all records from the left table, and the matched records from the right table.
		3. RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table.
		4. FULL (OUTER) JOIN: Returns all records when there is a match in either left or right table.

		1. (Inner Join):  $ Example 1 - SELECT * FROM Persons, Orders WHERE Persons.PersonId = Orders.PersonId; 
											$ Example 2 - SELECT * FROM Persons JOIN Orders ON Persons.PersonId = Orders.PersonId;
											$ Example 3 - SELECT PersonName, OrderDate, OrderNumber, Amount FROM Persons JOIN Orders ON Persons.PersonId = Orders.PersonId;
											$ Example 4 -  SELECT  Persons.PersonId, PersonName, OrderDate, OrderNumber FROM Persons JOIN Orders ON Persons.PersonId = Orders.PersonId;

		2. (Left Join): 	$ Example  - SELECT * FROM Persons LEFT JOIN Orders ON Persons.PersonId = Orders.PersonId;
		3. (Right Join): 	$ Example - SELECT * FROM Persons RIGHT JOIN Orders ON Persons.PersonId = Orders.PersonId;
		4. (Full Join): 	$ Example  - SELECT Persons.PersonId, Orders.OrderID FROM Persons
								 				FULL OUTER JOIN Orders ON Persons.PersonId = Orders.PersonId;
								 				ORDER BY Persons.PersonId;

																</></></> HAPPY END â˜º </></></>
